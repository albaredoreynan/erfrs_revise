= wicked_pdf_stylesheet_link_tag "application"
.pdf-wrapper style="margin-top: -80px"
  .row.rfr-index.mga-reports
    .col-md-12.header
      p.text-center 
        b
          | Department of Social Welfare and Development
        br
        ' NCDDP MUNICIPAL GRANTS ALLOCATION
        br
  
  .row.sp-table.mga-reports
    .col-md-12
      table.table.table-bordered style="font-size: 12px;"
        thead
          tr
            th.text-center rowspan=2 Region 
            th.text-center rowspan=2 Province
            th.text-center rowspan=2 Municipality
            th.text-center rowspan=2 Allocation
            th.text-center rowspan=2 Approve
            th.text-center colspan=3 MIBF
            th.text-center rowspan=2 Balance
          tr
            th.text-center Release
            th.text-center Excess
            th.text-center Total  
        tbody
          -@subprojects.each do |m, sps|
            - allocation = 0
            - release = 0
            - excess = 0 
            - year_allocated = sps.first.date_of_mibf.year
            - if (a = MuniFundAllocation.where(municipality_id:m.id, year: year_allocated)).present?
              - allocation = a.first.amount
            - else
              - allocation = 0
            -# allocation += sps.map{|c|c.grant_amount_direct_cost + c.grant_amount_indirect_cost + c.grant_amount_contingency_cost}.first
            - release += sps.map{|c|c.first_tranch_revised_amount + c.second_tranch_revised_amount + c.third_tranch_revised_amount}.first
            / - approve_amount = sps.map{|c| c.request_for_fund_releases.sum(&:amount_approve) }.pop
            
            - @pprove_amt_adb = total_grant_amount_per_mncpl(m.id, sps.first.date_of_mibf.year, 1)
            - @pprove_amt_wb = total_grant_amount_per_mncpl(m.id, sps.first.date_of_mibf.year, 2)
            - approve_amount = @pprove_amt_adb + @pprove_amt_wb

            - excess += approve_amount - release
            
            -# excess += sps.map{|c|c.first_tranch_amount + c.second_tranch_amount + c.third_tranch_amount}.first 
            - total_m = release + excess 
            tr
              td = m.province.region.code
              td = m.province.name
              td = m.name
              td = number_to_currency allocation
              td = number_to_currency approve_amount
              td = number_to_currency release
              td = number_to_currency excess
              td = number_to_currency total_m
              td = number_to_currency (allocation - approve_amount)
